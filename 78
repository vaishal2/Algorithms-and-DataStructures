Given a set of distinct integers, nums, return all possible subsets (the power set).

Note: The solution set must not contain duplicate subsets.

Example:

Input: nums = [1,2,3]
Output:
[
  [3],
  [1],
  [2],
  [1,2,3],
  [1,3],
  [2,3],
  [1,2],
  []
  
  /*
  class Solution {
    public List<List<Integer>> subsets(int[] nums) {
        
        List<List<Integer>> result= new ArrayList<>();
        
        backtrack(nums,result,new ArrayList<>(),0);
        
        return result;
        
    }
        
        
        public void backtrack(int[] nums, List<List<Integer>> result,List<Integer>templist,int start){
            
            result.add(new ArrayList<>(templist));
                for(int i=start;i<nums.length;i++){
                    templist.add(nums[i]);
                    backtrack(nums,result,templist,i+1);
                    templist.remove(templist.size()-1);
                    
                }
        
    }
}
  
  */
